---
http_interactions:
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/url
    body:
      encoding: UTF-8
      string: '{"url":"http://127.0.0.1:52662/login"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '38'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '2'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:41 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Email Address''
        or ./@name = ''Email Address'') or ./@placeholder = ''Email Address'') or
        ./@id = //label[normalize-space(string(.)) = ''Email Address'']/@for)] | .//label[normalize-space(string(.))
        = ''Email Address'']//.//*[self::input | self::textarea][not(./@type = ''submit''
        or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox'' or
        ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '587'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:41 GMT
      Content-Length:
      - '90'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"cf4f80c0-8e62-4c9b-b5fc-37d95461e261"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:41 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/cf4f80c0-8e62-4c9b-b5fc-37d95461e261/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:41 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:41 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/cf4f80c0-8e62-4c9b-b5fc-37d95461e261/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:41 GMT
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:41 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/cf4f80c0-8e62-4c9b-b5fc-37d95461e261/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:41 GMT
      Content-Length:
      - '17'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"cf4f80c0-8e62-4c9b-b5fc-37d95461e261"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '17'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:41 GMT
    body:
      encoding: UTF-8
      string: '{"value":"email"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"cf4f80c0-8e62-4c9b-b5fc-37d95461e261"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:41 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"cf4f80c0-8e62-4c9b-b5fc-37d95461e261"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:41 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/cf4f80c0-8e62-4c9b-b5fc-37d95461e261/value
    body:
      encoding: UTF-8
      string: '{"value":["h","e","l","e","n","e","@","k","a","u","l","k","e","c","a","r","t","w","r","i","g","h","t",".","n","a","m","e"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '123'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:41 GMT
      Connection:
      - close
      Content-Length:
      - '2'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:41 GMT
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"ae0e55e9-0f08-4a84-b7d6-dcae2f4bfe85"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:41 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/ae0e55e9-0f08-4a84-b7d6-dcae2f4bfe85/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:42 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/ae0e55e9-0f08-4a84-b7d6-dcae2f4bfe85/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:42 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/ae0e55e9-0f08-4a84-b7d6-dcae2f4bfe85/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:42 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '17'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"ae0e55e9-0f08-4a84-b7d6-dcae2f4bfe85"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:42 GMT
      Connection:
      - close
      Content-Length:
      - '20'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":"password"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"ae0e55e9-0f08-4a84-b7d6-dcae2f4bfe85"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:42 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"ae0e55e9-0f08-4a84-b7d6-dcae2f4bfe85"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:42 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/ae0e55e9-0f08-4a84-b7d6-dcae2f4bfe85/value
    body:
      encoding: UTF-8
      string: '{"value":["p","a","s","s","w","o","r","d"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '43'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:42 GMT
      Content-Length:
      - '2'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//input[./@type = ''submit'' or ./@type
        = ''reset'' or ./@type = ''image'' or ./@type = ''button''][((./@id = ''Sign
        in'' or ./@value = ''Sign in'') or ./@title = ''Sign in'')] | .//input[./@type
        = ''image''][./@alt = ''Sign in''] | .//button[((((./@id = ''Sign in'' or
        ./@value = ''Sign in'') or ./@title = ''Sign in'') or normalize-space(string(.))
        = ''Sign in'') or .//img[./@alt = ''Sign in''])] | .//input[./@type = ''image''][./@alt
        = ''Sign in'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '450'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:42 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"22786802-f21f-43f8-b7cb-64553fb5eb70"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/22786802-f21f-43f8-b7cb-64553fb5eb70/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:42 GMT
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/22786802-f21f-43f8-b7cb-64553fb5eb70/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:42 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/22786802-f21f-43f8-b7cb-64553fb5eb70/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '2'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:42 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/url
    body:
      encoding: UTF-8
      string: '{"url":"http://127.0.0.1:52662/invitations/new"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '48'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Content-Length:
      - '2'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = concat(''Friend'',\"''\",''s
        Name'') or ./@name = concat(''Friend'',\"''\",''s Name'')) or ./@placeholder
        = concat(''Friend'',\"''\",''s Name'')) or ./@id = //label[normalize-space(string(.))
        = concat(''Friend'',\"''\",''s Name'')]/@for)] | .//label[normalize-space(string(.))
        = concat(''Friend'',\"''\",''s Name'')]//.//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '667'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"77bfea6f-9355-4275-b2ae-28abd9da9107"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/77bfea6f-9355-4275-b2ae-28abd9da9107/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/77bfea6f-9355-4275-b2ae-28abd9da9107/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/77bfea6f-9355-4275-b2ae-28abd9da9107/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '17'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"77bfea6f-9355-4275-b2ae-28abd9da9107"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Content-Length:
      - '16'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":"text"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"77bfea6f-9355-4275-b2ae-28abd9da9107"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"77bfea6f-9355-4275-b2ae-28abd9da9107"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/77bfea6f-9355-4275-b2ae-28abd9da9107/value
    body:
      encoding: UTF-8
      string: '{"value":["J","o","h","n"," ","D","o","e"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '43'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Content-Length:
      - '2'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = concat(''Friend'',\"''\",''s
        Email'') or ./@name = concat(''Friend'',\"''\",''s Email'')) or ./@placeholder
        = concat(''Friend'',\"''\",''s Email'')) or ./@id = //label[normalize-space(string(.))
        = concat(''Friend'',\"''\",''s Email'')]/@for)] | .//label[normalize-space(string(.))
        = concat(''Friend'',\"''\",''s Email'')]//.//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '672'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = concat(''Friend'',\"''\",''s
        Email'') or ./@name = concat(''Friend'',\"''\",''s Email'')) or ./@placeholder
        = concat(''Friend'',\"''\",''s Email'')) or ./@id = //label[contains(normalize-space(string(.)),
        concat(''Friend'',\"''\",''s Email''))]/@for)] | .//label[contains(normalize-space(string(.)),
        concat(''Friend'',\"''\",''s Email''))]//.//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '690'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Content-Length:
      - '90'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"a2fd4a4f-3ba8-4697-8098-a2e3341e77c1"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/a2fd4a4f-3ba8-4697-8098-a2e3341e77c1/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/a2fd4a4f-3ba8-4697-8098-a2e3341e77c1/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/a2fd4a4f-3ba8-4697-8098-a2e3341e77c1/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Content-Length:
      - '17'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"a2fd4a4f-3ba8-4697-8098-a2e3341e77c1"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '17'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
    body:
      encoding: UTF-8
      string: '{"value":"email"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"a2fd4a4f-3ba8-4697-8098-a2e3341e77c1"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"a2fd4a4f-3ba8-4697-8098-a2e3341e77c1"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/a2fd4a4f-3ba8-4697-8098-a2e3341e77c1/value
    body:
      encoding: UTF-8
      string: '{"value":["J","o","h","n","@","d","o","e",".","c","o","m"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '59'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Connection:
      - close
      Content-Length:
      - '2'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Message'' or
        ./@name = ''Message'') or ./@placeholder = ''Message'') or ./@id = //label[normalize-space(string(.))
        = ''Message'']/@for)] | .//label[normalize-space(string(.)) = ''Message'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '557'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Message'' or
        ./@name = ''Message'') or ./@placeholder = ''Message'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Message'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Message'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '575'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '90'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:45 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"d70dcb9c-0f10-4164-a8a0-46be0ab86b6a"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:45 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/d70dcb9c-0f10-4164-a8a0-46be0ab86b6a/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:46 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:46 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/d70dcb9c-0f10-4164-a8a0-46be0ab86b6a/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:46 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:46 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/d70dcb9c-0f10-4164-a8a0-46be0ab86b6a/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:46 GMT
      Connection:
      - close
      Content-Length:
      - '20'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":"textarea"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d70dcb9c-0f10-4164-a8a0-46be0ab86b6a"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:46 GMT
      Content-Length:
      - '20'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"textarea"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d70dcb9c-0f10-4164-a8a0-46be0ab86b6a"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:46 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"d70dcb9c-0f10-4164-a8a0-46be0ab86b6a"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:46 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/d70dcb9c-0f10-4164-a8a0-46be0ab86b6a/value
    body:
      encoding: UTF-8
      string: '{"value":["h","e","l","l","o"," ","p","l","e","a","s","e"," ","j","o","i","n"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '79'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:46 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//input[./@type = ''submit'' or ./@type
        = ''reset'' or ./@type = ''image'' or ./@type = ''button''][((./@id = ''Send
        Invitation'' or ./@value = ''Send Invitation'') or ./@title = ''Send Invitation'')]
        | .//input[./@type = ''image''][./@alt = ''Send Invitation''] | .//button[((((./@id
        = ''Send Invitation'' or ./@value = ''Send Invitation'') or ./@title = ''Send
        Invitation'') or normalize-space(string(.)) = ''Send Invitation'') or .//img[./@alt
        = ''Send Invitation''])] | .//input[./@type = ''image''][./@alt = ''Send Invitation'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '530'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:46 GMT
      Connection:
      - close
      Content-Length:
      - '90'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"e56b98bf-403e-4fd7-a088-473b42518f7d"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:46 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/e56b98bf-403e-4fd7-a088-473b42518f7d/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:46 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:46 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/e56b98bf-403e-4fd7-a088-473b42518f7d/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:46 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/e56b98bf-403e-4fd7-a088-473b42518f7d/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:46 GMT
      Content-Length:
      - '2'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''Welcome'' or normalize-space(string(.))
        = ''Welcome'') or ./@title = ''Welcome'') or .//img[./@alt = ''Welcome''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '162'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:48 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:48 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''Welcome'' or contains(normalize-space(string(.)),
        ''Welcome'')) or contains(./@title, ''Welcome'')) or .//img[contains(./@alt,
        ''Welcome'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '189'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:48 GMT
      Connection:
      - close
      Content-Length:
      - '90'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"252af2d1-f7c0-40c9-a508-d0562fd8fda1"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:48 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/252af2d1-f7c0-40c9-a508-d0562fd8fda1/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:48 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:48 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/252af2d1-f7c0-40c9-a508-d0562fd8fda1/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '2'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:48 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:48 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''Sign Out'' or
        normalize-space(string(.)) = ''Sign Out'') or ./@title = ''Sign Out'') or
        .//img[./@alt = ''Sign Out''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '166'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:48 GMT
      Content-Length:
      - '90'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"41148819-5b7a-4cc8-aecc-e80deb623987"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:48 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/41148819-5b7a-4cc8-aecc-e80deb623987/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:48 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:48 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/41148819-5b7a-4cc8-aecc-e80deb623987/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:48 GMT
      Connection:
      - close
      Content-Length:
      - '2'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:48 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/url
    body:
      encoding: UTF-8
      string: '{"url":"http://localhost:52662/register/tVpjNdOxlZh6u7au2MPKZA"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '64'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:49 GMT
      Content-Length:
      - '2'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:49 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '90'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"1358bb70-dcf2-4ff9-8bdb-3db63bd31316"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/1358bb70-dcf2-4ff9-8bdb-3db63bd31316/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/1358bb70-dcf2-4ff9-8bdb-3db63bd31316/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/1358bb70-dcf2-4ff9-8bdb-3db63bd31316/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Connection:
      - close
      Content-Length:
      - '17'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"1358bb70-dcf2-4ff9-8bdb-3db63bd31316"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Content-Length:
      - '20'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"password"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"1358bb70-dcf2-4ff9-8bdb-3db63bd31316"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"1358bb70-dcf2-4ff9-8bdb-3db63bd31316"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/1358bb70-dcf2-4ff9-8bdb-3db63bd31316/value
    body:
      encoding: UTF-8
      string: '{"value":["p","a","s","s","w","o","r","d"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '43'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Full Name'' or
        ./@name = ''Full Name'') or ./@placeholder = ''Full Name'') or ./@id = //label[normalize-space(string(.))
        = ''Full Name'']/@for)] | .//label[normalize-space(string(.)) = ''Full Name'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '567'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Connection:
      - close
      Content-Length:
      - '90'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"cbb9b764-77cd-49a8-96d0-4b7ec2311e19"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/cbb9b764-77cd-49a8-96d0-4b7ec2311e19/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/cbb9b764-77cd-49a8-96d0-4b7ec2311e19/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/cbb9b764-77cd-49a8-96d0-4b7ec2311e19/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Content-Length:
      - '17'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"cbb9b764-77cd-49a8-96d0-4b7ec2311e19"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '16'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"text"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"cbb9b764-77cd-49a8-96d0-4b7ec2311e19"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"cbb9b764-77cd-49a8-96d0-4b7ec2311e19"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/cbb9b764-77cd-49a8-96d0-4b7ec2311e19/value
    body:
      encoding: UTF-8
      string: '{"value":["J","o","h","n"," ","D","o","e"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '43'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '2'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Credit Card Number''
        or ./@name = ''Credit Card Number'') or ./@placeholder = ''Credit Card Number'')
        or ./@id = //label[normalize-space(string(.)) = ''Credit Card Number'']/@for)]
        | .//label[normalize-space(string(.)) = ''Credit Card Number'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '612'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Content-Length:
      - '90'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"ed0e1baa-2a37-49bc-af05-42c9cc803d3a"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/ed0e1baa-2a37-49bc-af05-42c9cc803d3a/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/ed0e1baa-2a37-49bc-af05-42c9cc803d3a/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/ed0e1baa-2a37-49bc-af05-42c9cc803d3a/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Content-Length:
      - '17'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"ed0e1baa-2a37-49bc-af05-42c9cc803d3a"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '16'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
    body:
      encoding: UTF-8
      string: '{"value":"text"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"ed0e1baa-2a37-49bc-af05-42c9cc803d3a"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:50 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"ed0e1baa-2a37-49bc-af05-42c9cc803d3a"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/ed0e1baa-2a37-49bc-af05-42c9cc803d3a/value
    body:
      encoding: UTF-8
      string: '{"value":["4","2","4","2","4","2","4","2","4","2","4","2","4","2","4","2"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '75'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Connection:
      - close
      Content-Length:
      - '2'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Security Code''
        or ./@name = ''Security Code'') or ./@placeholder = ''Security Code'') or
        ./@id = //label[normalize-space(string(.)) = ''Security Code'']/@for)] | .//label[normalize-space(string(.))
        = ''Security Code'']//.//*[self::input | self::textarea][not(./@type = ''submit''
        or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox'' or
        ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '587'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"50da9dd4-f7a4-4261-a7ea-e16aa579e15b"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/50da9dd4-f7a4-4261-a7ea-e16aa579e15b/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/50da9dd4-f7a4-4261-a7ea-e16aa579e15b/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/50da9dd4-f7a4-4261-a7ea-e16aa579e15b/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '17'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"50da9dd4-f7a4-4261-a7ea-e16aa579e15b"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Connection:
      - close
      Content-Length:
      - '16'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":"text"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"50da9dd4-f7a4-4261-a7ea-e16aa579e15b"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"50da9dd4-f7a4-4261-a7ea-e16aa579e15b"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/50da9dd4-f7a4-4261-a7ea-e16aa579e15b/value
    body:
      encoding: UTF-8
      string: '{"value":["1","2","3"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '23'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Content-Length:
      - '2'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//select[(((./@id = ''date_month'' or ./@name
        = ''date_month'') or ./@placeholder = ''date_month'') or ./@id = //label[normalize-space(string(.))
        = ''date_month'']/@for)] | .//label[normalize-space(string(.)) = ''date_month'']//.//select"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '256'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"dd3f3daf-989d-49c4-b765-4d93df4b8a30"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/dd3f3daf-989d-49c4-b765-4d93df4b8a30/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/dd3f3daf-989d-49c4-b765-4d93df4b8a30/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/dd3f3daf-989d-49c4-b765-4d93df4b8a30/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//option[normalize-space(string(.)) = ''10
        - October'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '82'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '90'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"507aff91-e307-4e44-a68b-ff862b45997f"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/507aff91-e307-4e44-a68b-ff862b45997f/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/507aff91-e307-4e44-a68b-ff862b45997f/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/507aff91-e307-4e44-a68b-ff862b45997f/selected
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//select[(((./@id = ''date_year'' or ./@name
        = ''date_year'') or ./@placeholder = ''date_year'') or ./@id = //label[normalize-space(string(.))
        = ''date_year'']/@for)] | .//label[normalize-space(string(.)) = ''date_year'']//.//select"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '251'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"8fbc75a1-52fc-4f4a-b249-df926048d10c"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/8fbc75a1-52fc-4f4a-b249-df926048d10c/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/8fbc75a1-52fc-4f4a-b249-df926048d10c/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:51 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:51 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/8fbc75a1-52fc-4f4a-b249-df926048d10c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//option[normalize-space(string(.)) = ''2019'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '74'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:52 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"0a4f8963-df64-48f9-ba1f-f33e0fa6a8c5"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:52 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/0a4f8963-df64-48f9-ba1f-f33e0fa6a8c5/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:52 GMT
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:52 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/0a4f8963-df64-48f9-ba1f-f33e0fa6a8c5/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:52 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:52 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/0a4f8963-df64-48f9-ba1f-f33e0fa6a8c5/selected
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '15'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:52 GMT
    body:
      encoding: UTF-8
      string: '{"value":false}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:52 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/0a4f8963-df64-48f9-ba1f-f33e0fa6a8c5/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:52 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:52 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/0a4f8963-df64-48f9-ba1f-f33e0fa6a8c5/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:52 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:52 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//input[./@type = ''submit'' or ./@type
        = ''reset'' or ./@type = ''image'' or ./@type = ''button''][((./@id = ''Sign
        Up'' or ./@value = ''Sign Up'') or ./@title = ''Sign Up'')] | .//input[./@type
        = ''image''][./@alt = ''Sign Up''] | .//button[((((./@id = ''Sign Up'' or
        ./@value = ''Sign Up'') or ./@title = ''Sign Up'') or normalize-space(string(.))
        = ''Sign Up'') or .//img[./@alt = ''Sign Up''])] | .//input[./@type = ''image''][./@alt
        = ''Sign Up'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '450'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:52 GMT
      Connection:
      - close
      Content-Length:
      - '90'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"e48fc15a-8343-4e16-afbb-b337ce25eebb"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:52 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/e48fc15a-8343-4e16-afbb-b337ce25eebb/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:52 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:52 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/e48fc15a-8343-4e16-afbb-b337ce25eebb/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:52 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:52 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/e48fc15a-8343-4e16-afbb-b337ce25eebb/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:52 GMT
      Content-Length:
      - '2'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:52 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Email Address''
        or ./@name = ''Email Address'') or ./@placeholder = ''Email Address'') or
        ./@id = //label[normalize-space(string(.)) = ''Email Address'']/@for)] | .//label[normalize-space(string(.))
        = ''Email Address'']//.//*[self::input | self::textarea][not(./@type = ''submit''
        or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox'' or
        ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '587'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:54 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"a1c776ce-7f25-4a82-8319-d6b9ea0412e2"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:54 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/a1c776ce-7f25-4a82-8319-d6b9ea0412e2/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:54 GMT
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:54 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/a1c776ce-7f25-4a82-8319-d6b9ea0412e2/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:54 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:54 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/a1c776ce-7f25-4a82-8319-d6b9ea0412e2/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '17'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:54 GMT
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:54 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"a1c776ce-7f25-4a82-8319-d6b9ea0412e2"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:54 GMT
      Content-Length:
      - '17'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":"email"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:54 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/customers
    body:
      encoding: US-ASCII
      string: card=tok_198e7AFu8RB24okGrMCO3upk&email=John%40doe.com&plan=0001
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Stripe/v1 RubyBindings/1.55.0
      Authorization:
      - Bearer sk_test_Hj66ggJNipYBdJNvdJK83fEU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"1.55.0","lang":"ruby","lang_version":"2.1.2 p95 (2014-05-08)","platform":"x86_64-linux","engine":"ruby","publisher":"stripe","uname":"Linux
        version 4.4.0-45-generic (buildd@lgw01-34) (gcc version 5.4.0 20160609 (Ubuntu
        5.4.0-6ubuntu1~16.04.2) ) #66-Ubuntu SMP Wed Oct 19 14:12:37 UTC 2016","hostname":"michaelmentele-Satellite-C75D-B"}'
      Content-Length:
      - '64'
      Host:
      - api.stripe.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Tue, 25 Oct 2016 23:13:54 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '2415'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_9RXBKdubIwiZTr
      Stripe-Version:
      - '2016-07-06'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains
    body:
      encoding: UTF-8
      string: |
        {
          "id": "cus_9RXBF5Ub7QXS1i",
          "object": "customer",
          "account_balance": 0,
          "created": 1477437234,
          "currency": "usd",
          "default_source": "card_198e7AFu8RB24okGXwAl10YK",
          "delinquent": false,
          "description": null,
          "discount": null,
          "email": "John@doe.com",
          "livemode": false,
          "metadata": {},
          "shipping": null,
          "sources": {
            "object": "list",
            "data": [
              {
                "id": "card_198e7AFu8RB24okGXwAl10YK",
                "object": "card",
                "address_city": null,
                "address_country": null,
                "address_line1": null,
                "address_line1_check": null,
                "address_line2": null,
                "address_state": null,
                "address_zip": null,
                "address_zip_check": null,
                "brand": "Visa",
                "country": "US",
                "customer": "cus_9RXBF5Ub7QXS1i",
                "cvc_check": "pass",
                "dynamic_last4": null,
                "exp_month": 10,
                "exp_year": 2019,
                "fingerprint": "E3jTfASODt8V0ox6",
                "funding": "credit",
                "last4": "4242",
                "metadata": {},
                "name": null,
                "tokenization_method": null
              }
            ],
            "has_more": false,
            "total_count": 1,
            "url": "/v1/customers/cus_9RXBF5Ub7QXS1i/sources"
          },
          "subscriptions": {
            "object": "list",
            "data": [
              {
                "id": "sub_9RXBZJ7kvGJlcD",
                "object": "subscription",
                "application_fee_percent": null,
                "cancel_at_period_end": false,
                "canceled_at": null,
                "created": 1477437234,
                "current_period_end": 1480115634,
                "current_period_start": 1477437234,
                "customer": "cus_9RXBF5Ub7QXS1i",
                "discount": null,
                "ended_at": null,
                "livemode": false,
                "metadata": {},
                "plan": {
                  "id": "0001",
                  "object": "plan",
                  "amount": 999,
                  "created": 1477413930,
                  "currency": "usd",
                  "interval": "month",
                  "interval_count": 1,
                  "livemode": false,
                  "metadata": {},
                  "name": "MyflixSubscribe",
                  "statement_descriptor": null,
                  "trial_period_days": null
                },
                "quantity": 1,
                "start": 1477437234,
                "status": "active",
                "tax_percent": null,
                "trial_end": null,
                "trial_start": null
              }
            ],
            "has_more": false,
            "total_count": 1,
            "url": "/v1/customers/cus_9RXBF5Ub7QXS1i/subscriptions"
          }
        }
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:54 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"a1c776ce-7f25-4a82-8319-d6b9ea0412e2"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:54 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:54 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"a1c776ce-7f25-4a82-8319-d6b9ea0412e2"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:54 GMT
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:54 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/a1c776ce-7f25-4a82-8319-d6b9ea0412e2/value
    body:
      encoding: UTF-8
      string: '{"value":["J","o","h","n","@","d","o","e",".","c","o","m"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '59'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:54 GMT
      Content-Length:
      - '2'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:54 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '90'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:54 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"1358bb70-dcf2-4ff9-8bdb-3db63bd31316"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:54 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/1358bb70-dcf2-4ff9-8bdb-3db63bd31316/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:54 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:54 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/1358bb70-dcf2-4ff9-8bdb-3db63bd31316/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '163'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"error":"stale element reference","message":"The element reference
        is stale. Either the element is no longer attached to the DOM or the page
        has been refreshed."}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"da3d9ae6-e802-445e-add3-e131f932edcb"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/da3d9ae6-e802-445e-add3-e131f932edcb/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/da3d9ae6-e802-445e-add3-e131f932edcb/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/da3d9ae6-e802-445e-add3-e131f932edcb/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '17'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"da3d9ae6-e802-445e-add3-e131f932edcb"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
      Connection:
      - close
      Content-Length:
      - '20'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":"password"}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"da3d9ae6-e802-445e-add3-e131f932edcb"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"da3d9ae6-e802-445e-add3-e131f932edcb"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/da3d9ae6-e802-445e-add3-e131f932edcb/value
    body:
      encoding: UTF-8
      string: '{"value":["p","a","s","s","w","o","r","d"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '43'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
      Content-Length:
      - '2'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//input[./@type = ''submit'' or ./@type
        = ''reset'' or ./@type = ''image'' or ./@type = ''button''][((./@id = ''Sign
        in'' or ./@value = ''Sign in'') or ./@title = ''Sign in'')] | .//input[./@type
        = ''image''][./@alt = ''Sign in''] | .//button[((((./@id = ''Sign in'' or
        ./@value = ''Sign in'') or ./@title = ''Sign in'') or normalize-space(string(.))
        = ''Sign in'') or .//img[./@alt = ''Sign in''])] | .//input[./@type = ''image''][./@alt
        = ''Sign in'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '450'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"ddceced0-6aac-4892-beb0-ffeed8145814"}]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/ddceced0-6aac-4892-beb0-ffeed8145814/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/ddceced0-6aac-4892-beb0-ffeed8145814/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/element/ddceced0-6aac-4892-beb0-ffeed8145814/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '2'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:55 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:55 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:57 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:57 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:57 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:57 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:58 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:13:59 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:13:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:00 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:00 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/05282b42-128e-4b58-8176-17210404bcd0/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Oct 2016 23:14:01 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Tue, 25 Oct 2016 23:14:01 GMT
- request:
    method: get
    uri: http://127.0.0.1:52662/__identify__
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: 'OK '
    headers:
      Server:
      - WEBrick/1.3.1 (Ruby/2.1.2/2014-05-08)
      Date:
      - Thu, 27 Oct 2016 00:16:09 GMT
      Content-Length:
      - '8'
      Connection:
      - Keep-Alive
    body:
      encoding: UTF-8
      string: '44501440'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:09 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session
    body:
      encoding: UTF-8
      string: '{"desiredCapabilities":{"browserName":"firefox","browserVersion":null,"platformName":null,"platformVersion":"any","acceptSslCerts":false,"pageLoadStrategy":"normal","unexpectedAlertBehaviour":"ignore","moz:firefoxOptions":{}}}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '226'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:25 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '564'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"sessionId":"21dfc6c6-fe1b-4562-b714-008c4f81f021","value":{"XULappId":"{ec8030f7-c20a-464f-9b0e-13a3a9e97384}","acceptSslCerts":false,"appBuildId":"20160920074044","browserName":"firefox","browserVersion":null,"command_id":1,"device":"desktop","pageLoadStrategy":"normal","platform":"LINUX","platformName":null,"platformVersion":"4.4.0-45-generic","processId":1578,"proxy":{},"raisesAccessibilityExceptions":false,"rotatable":false,"specificationLevel":0,"takesElementScreenshot":true,"takesScreenshot":true,"unexpectedAlertBehaviour":"ignore","version":"49.0"}}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:25 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/url
    body:
      encoding: UTF-8
      string: '{"url":"http://127.0.0.1:52662/login"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '38'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Date:
      - Thu, 27 Oct 2016 00:16:28 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:28 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Email Address''
        or ./@name = ''Email Address'') or ./@placeholder = ''Email Address'') or
        ./@id = //label[normalize-space(string(.)) = ''Email Address'']/@for)] | .//label[normalize-space(string(.))
        = ''Email Address'']//.//*[self::input | self::textarea][not(./@type = ''submit''
        or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox'' or
        ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '587'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:28 GMT
      Connection:
      - close
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"93f55b76-aab4-4915-9b72-55bc00e678c6"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:28 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/93f55b76-aab4-4915-9b72-55bc00e678c6/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:29 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:29 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/93f55b76-aab4-4915-9b72-55bc00e678c6/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:29 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:29 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/93f55b76-aab4-4915-9b72-55bc00e678c6/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:29 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '17'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:29 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"93f55b76-aab4-4915-9b72-55bc00e678c6"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '17'
      Date:
      - Thu, 27 Oct 2016 00:16:29 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"email"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:29 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"93f55b76-aab4-4915-9b72-55bc00e678c6"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:29 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:29 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"93f55b76-aab4-4915-9b72-55bc00e678c6"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:29 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:29 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/93f55b76-aab4-4915-9b72-55bc00e678c6/value
    body:
      encoding: UTF-8
      string: '{"value":["l","u","r","a","_","b","e","r","g","s","t","r","o","m","@","m","a","n","t","e","k","a","u","t","z","e","r",".","i","n","f","o"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '139'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:29 GMT
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:29 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:29 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"ac79d88a-e2cf-4de3-915f-dcde55b4f599"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:29 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/ac79d88a-e2cf-4de3-915f-dcde55b4f599/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:29 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:29 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/ac79d88a-e2cf-4de3-915f-dcde55b4f599/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:29 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:29 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/ac79d88a-e2cf-4de3-915f-dcde55b4f599/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '17'
      Date:
      - Thu, 27 Oct 2016 00:16:29 GMT
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:29 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"ac79d88a-e2cf-4de3-915f-dcde55b4f599"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:30 GMT
      Content-Length:
      - '20'
    body:
      encoding: UTF-8
      string: '{"value":"password"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:30 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"ac79d88a-e2cf-4de3-915f-dcde55b4f599"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:30 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:30 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"ac79d88a-e2cf-4de3-915f-dcde55b4f599"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:30 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:30 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/ac79d88a-e2cf-4de3-915f-dcde55b4f599/value
    body:
      encoding: UTF-8
      string: '{"value":["p","a","s","s","w","o","r","d"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '43'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:30 GMT
      Connection:
      - close
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:30 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//input[./@type = ''submit'' or ./@type
        = ''reset'' or ./@type = ''image'' or ./@type = ''button''][((./@id = ''Sign
        in'' or ./@value = ''Sign in'') or ./@title = ''Sign in'')] | .//input[./@type
        = ''image''][./@alt = ''Sign in''] | .//button[((((./@id = ''Sign in'' or
        ./@value = ''Sign in'') or ./@title = ''Sign in'') or normalize-space(string(.))
        = ''Sign in'') or .//img[./@alt = ''Sign in''])] | .//input[./@type = ''image''][./@alt
        = ''Sign in'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '450'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:30 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"a2d48b61-1ae5-43ce-8e38-a36969e3a815"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:30 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/a2d48b61-1ae5-43ce-8e38-a36969e3a815/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:31 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:31 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/a2d48b61-1ae5-43ce-8e38-a36969e3a815/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:31 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:31 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/a2d48b61-1ae5-43ce-8e38-a36969e3a815/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Date:
      - Thu, 27 Oct 2016 00:16:31 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:31 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/url
    body:
      encoding: UTF-8
      string: '{"url":"http://127.0.0.1:52662/invitations/new"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '48'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:34 GMT
      Connection:
      - close
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:34 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = concat(''Friend'',\"''\",''s
        Name'') or ./@name = concat(''Friend'',\"''\",''s Name'')) or ./@placeholder
        = concat(''Friend'',\"''\",''s Name'')) or ./@id = //label[normalize-space(string(.))
        = concat(''Friend'',\"''\",''s Name'')]/@for)] | .//label[normalize-space(string(.))
        = concat(''Friend'',\"''\",''s Name'')]//.//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '667'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:34 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"0126a2ea-93f9-4d3e-b0c7-4b873ad95665"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:34 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/0126a2ea-93f9-4d3e-b0c7-4b873ad95665/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:34 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:34 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/0126a2ea-93f9-4d3e-b0c7-4b873ad95665/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:34 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:34 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/0126a2ea-93f9-4d3e-b0c7-4b873ad95665/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '17'
      Date:
      - Thu, 27 Oct 2016 00:16:34 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:34 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0126a2ea-93f9-4d3e-b0c7-4b873ad95665"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:34 GMT
      Connection:
      - close
      Content-Length:
      - '16'
    body:
      encoding: UTF-8
      string: '{"value":"text"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:34 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0126a2ea-93f9-4d3e-b0c7-4b873ad95665"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:34 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:34 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"0126a2ea-93f9-4d3e-b0c7-4b873ad95665"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:34 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:34 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/0126a2ea-93f9-4d3e-b0c7-4b873ad95665/value
    body:
      encoding: UTF-8
      string: '{"value":["J","o","h","n"," ","D","o","e"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '43'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:35 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = concat(''Friend'',\"''\",''s
        Email'') or ./@name = concat(''Friend'',\"''\",''s Email'')) or ./@placeholder
        = concat(''Friend'',\"''\",''s Email'')) or ./@id = //label[normalize-space(string(.))
        = concat(''Friend'',\"''\",''s Email'')]/@for)] | .//label[normalize-space(string(.))
        = concat(''Friend'',\"''\",''s Email'')]//.//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '672'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 00:16:35 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = concat(''Friend'',\"''\",''s
        Email'') or ./@name = concat(''Friend'',\"''\",''s Email'')) or ./@placeholder
        = concat(''Friend'',\"''\",''s Email'')) or ./@id = //label[contains(normalize-space(string(.)),
        concat(''Friend'',\"''\",''s Email''))]/@for)] | .//label[contains(normalize-space(string(.)),
        concat(''Friend'',\"''\",''s Email''))]//.//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '690'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:35 GMT
      Connection:
      - close
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"54c7a054-62e0-42cf-a5ce-9862c8614266"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:35 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/54c7a054-62e0-42cf-a5ce-9862c8614266/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:35 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:35 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/54c7a054-62e0-42cf-a5ce-9862c8614266/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:35 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:35 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/54c7a054-62e0-42cf-a5ce-9862c8614266/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:35 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '17'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"54c7a054-62e0-42cf-a5ce-9862c8614266"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '17'
      Date:
      - Thu, 27 Oct 2016 00:16:35 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"email"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"54c7a054-62e0-42cf-a5ce-9862c8614266"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:35 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"54c7a054-62e0-42cf-a5ce-9862c8614266"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:35 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/54c7a054-62e0-42cf-a5ce-9862c8614266/value
    body:
      encoding: UTF-8
      string: '{"value":["J","o","h","n","@","d","o","e",".","c","o","m"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '59'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:35 GMT
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Message'' or
        ./@name = ''Message'') or ./@placeholder = ''Message'') or ./@id = //label[normalize-space(string(.))
        = ''Message'']/@for)] | .//label[normalize-space(string(.)) = ''Message'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '557'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:35 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Message'' or
        ./@name = ''Message'') or ./@placeholder = ''Message'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Message'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Message'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '575'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:35 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"ef6bc378-a58b-4064-bce4-62887ce622e9"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:35 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/ef6bc378-a58b-4064-bce4-62887ce622e9/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:35 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:35 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/ef6bc378-a58b-4064-bce4-62887ce622e9/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:36 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:36 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/ef6bc378-a58b-4064-bce4-62887ce622e9/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:36 GMT
      Content-Length:
      - '20'
    body:
      encoding: UTF-8
      string: '{"value":"textarea"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"ef6bc378-a58b-4064-bce4-62887ce622e9"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:36 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '20'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"textarea"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"ef6bc378-a58b-4064-bce4-62887ce622e9"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:36 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"ef6bc378-a58b-4064-bce4-62887ce622e9"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:36 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/ef6bc378-a58b-4064-bce4-62887ce622e9/value
    body:
      encoding: UTF-8
      string: '{"value":["h","e","l","l","o"," ","p","l","e","a","s","e"," ","j","o","i","n"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '79'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '2'
      Date:
      - Thu, 27 Oct 2016 00:16:36 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//input[./@type = ''submit'' or ./@type
        = ''reset'' or ./@type = ''image'' or ./@type = ''button''][((./@id = ''Send
        Invitation'' or ./@value = ''Send Invitation'') or ./@title = ''Send Invitation'')]
        | .//input[./@type = ''image''][./@alt = ''Send Invitation''] | .//button[((((./@id
        = ''Send Invitation'' or ./@value = ''Send Invitation'') or ./@title = ''Send
        Invitation'') or normalize-space(string(.)) = ''Send Invitation'') or .//img[./@alt
        = ''Send Invitation''])] | .//input[./@type = ''image''][./@alt = ''Send Invitation'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '530'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:36 GMT
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"b5027412-5188-4136-9b0a-80dd56e5bd1c"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:36 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/b5027412-5188-4136-9b0a-80dd56e5bd1c/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:36 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:36 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/b5027412-5188-4136-9b0a-80dd56e5bd1c/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:36 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/b5027412-5188-4136-9b0a-80dd56e5bd1c/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:36 GMT
      Connection:
      - close
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''Welcome'' or normalize-space(string(.))
        = ''Welcome'') or ./@title = ''Welcome'') or .//img[./@alt = ''Welcome''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '162'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 00:16:38 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:38 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''Welcome'' or contains(normalize-space(string(.)),
        ''Welcome'')) or contains(./@title, ''Welcome'')) or .//img[contains(./@alt,
        ''Welcome'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '189'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:38 GMT
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"8a724d64-3316-4a38-b35c-900fabbed87a"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:38 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/8a724d64-3316-4a38-b35c-900fabbed87a/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:38 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:38 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/8a724d64-3316-4a38-b35c-900fabbed87a/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Date:
      - Thu, 27 Oct 2016 00:16:39 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:39 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''Sign Out'' or
        normalize-space(string(.)) = ''Sign Out'') or ./@title = ''Sign Out'') or
        .//img[./@alt = ''Sign Out''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '166'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:39 GMT
      Connection:
      - close
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"b6cfb9d0-743b-48cf-a7f9-6be1f6596b2e"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:39 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/b6cfb9d0-743b-48cf-a7f9-6be1f6596b2e/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:39 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:39 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/b6cfb9d0-743b-48cf-a7f9-6be1f6596b2e/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:39 GMT
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:39 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/url
    body:
      encoding: UTF-8
      string: '{"url":"http://localhost:52662/register/qjMpgspav24WyV3omXFFhQ"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '64'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:40 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:40 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"7ac8728f-e4bd-4a5c-b35e-8bd75b030859"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:40 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/7ac8728f-e4bd-4a5c-b35e-8bd75b030859/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:40 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:40 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/7ac8728f-e4bd-4a5c-b35e-8bd75b030859/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:40 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:40 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/7ac8728f-e4bd-4a5c-b35e-8bd75b030859/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:40 GMT
      Content-Length:
      - '17'
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"7ac8728f-e4bd-4a5c-b35e-8bd75b030859"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:40 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '20'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"password"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"7ac8728f-e4bd-4a5c-b35e-8bd75b030859"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:40 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"7ac8728f-e4bd-4a5c-b35e-8bd75b030859"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:40 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/7ac8728f-e4bd-4a5c-b35e-8bd75b030859/value
    body:
      encoding: UTF-8
      string: '{"value":["p","a","s","s","w","o","r","d"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '43'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '2'
      Date:
      - Thu, 27 Oct 2016 00:16:40 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Full Name'' or
        ./@name = ''Full Name'') or ./@placeholder = ''Full Name'') or ./@id = //label[normalize-space(string(.))
        = ''Full Name'']/@for)] | .//label[normalize-space(string(.)) = ''Full Name'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '567'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:40 GMT
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"f3ba0df3-9c88-4948-82f1-7c0ee1adad58"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:40 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f3ba0df3-9c88-4948-82f1-7c0ee1adad58/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:40 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:40 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f3ba0df3-9c88-4948-82f1-7c0ee1adad58/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:40 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:40 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f3ba0df3-9c88-4948-82f1-7c0ee1adad58/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:40 GMT
      Connection:
      - close
      Content-Length:
      - '17'
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f3ba0df3-9c88-4948-82f1-7c0ee1adad58"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '16'
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
    body:
      encoding: UTF-8
      string: '{"value":"text"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f3ba0df3-9c88-4948-82f1-7c0ee1adad58"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"f3ba0df3-9c88-4948-82f1-7c0ee1adad58"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f3ba0df3-9c88-4948-82f1-7c0ee1adad58/value
    body:
      encoding: UTF-8
      string: '{"value":["J","o","h","n"," ","D","o","e"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '43'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Credit Card Number''
        or ./@name = ''Credit Card Number'') or ./@placeholder = ''Credit Card Number'')
        or ./@id = //label[normalize-space(string(.)) = ''Credit Card Number'']/@for)]
        | .//label[normalize-space(string(.)) = ''Credit Card Number'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '612'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
      Connection:
      - close
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"f1f3e814-b99d-43a6-b6f4-a1a408c603c7"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f1f3e814-b99d-43a6-b6f4-a1a408c603c7/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f1f3e814-b99d-43a6-b6f4-a1a408c603c7/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f1f3e814-b99d-43a6-b6f4-a1a408c603c7/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '17'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f1f3e814-b99d-43a6-b6f4-a1a408c603c7"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '16'
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"text"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f1f3e814-b99d-43a6-b6f4-a1a408c603c7"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"f1f3e814-b99d-43a6-b6f4-a1a408c603c7"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f1f3e814-b99d-43a6-b6f4-a1a408c603c7/value
    body:
      encoding: UTF-8
      string: '{"value":["4","2","4","2","4","2","4","2","4","2","4","2","4","2","4","2"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '75'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Security Code''
        or ./@name = ''Security Code'') or ./@placeholder = ''Security Code'') or
        ./@id = //label[normalize-space(string(.)) = ''Security Code'']/@for)] | .//label[normalize-space(string(.))
        = ''Security Code'']//.//*[self::input | self::textarea][not(./@type = ''submit''
        or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox'' or
        ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '587'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"69d8961f-4a29-4c1c-9ffc-378ab918bd91"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/69d8961f-4a29-4c1c-9ffc-378ab918bd91/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/69d8961f-4a29-4c1c-9ffc-378ab918bd91/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/69d8961f-4a29-4c1c-9ffc-378ab918bd91/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '17'
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"69d8961f-4a29-4c1c-9ffc-378ab918bd91"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:41 GMT
      Content-Length:
      - '16'
    body:
      encoding: UTF-8
      string: '{"value":"text"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"69d8961f-4a29-4c1c-9ffc-378ab918bd91"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"69d8961f-4a29-4c1c-9ffc-378ab918bd91"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/69d8961f-4a29-4c1c-9ffc-378ab918bd91/value
    body:
      encoding: UTF-8
      string: '{"value":["1","2","3"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '23'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Connection:
      - close
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//select[(((./@id = ''date_month'' or ./@name
        = ''date_month'') or ./@placeholder = ''date_month'') or ./@id = //label[normalize-space(string(.))
        = ''date_month'']/@for)] | .//label[normalize-space(string(.)) = ''date_month'']//.//select"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '256'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"fa27352c-9c74-4fbe-bfc7-8a49fcd8f7ef"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/fa27352c-9c74-4fbe-bfc7-8a49fcd8f7ef/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/fa27352c-9c74-4fbe-bfc7-8a49fcd8f7ef/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/fa27352c-9c74-4fbe-bfc7-8a49fcd8f7ef/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//option[normalize-space(string(.)) = ''10
        - October'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '82'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"8b730eb8-c04b-456a-8314-79a6e9d697c5"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/8b730eb8-c04b-456a-8314-79a6e9d697c5/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/8b730eb8-c04b-456a-8314-79a6e9d697c5/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/8b730eb8-c04b-456a-8314-79a6e9d697c5/selected
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//select[(((./@id = ''date_year'' or ./@name
        = ''date_year'') or ./@placeholder = ''date_year'') or ./@id = //label[normalize-space(string(.))
        = ''date_year'']/@for)] | .//label[normalize-space(string(.)) = ''date_year'']//.//select"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '251'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"ddb9466d-51e4-41b8-a7b5-ff7bce61609a"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/ddb9466d-51e4-41b8-a7b5-ff7bce61609a/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/ddb9466d-51e4-41b8-a7b5-ff7bce61609a/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/ddb9466d-51e4-41b8-a7b5-ff7bce61609a/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//option[normalize-space(string(.)) = ''2019'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '74'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"e2ac8d0d-5449-4d8b-8eb4-e0a2d6ebf893"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/e2ac8d0d-5449-4d8b-8eb4-e0a2d6ebf893/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/e2ac8d0d-5449-4d8b-8eb4-e0a2d6ebf893/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/e2ac8d0d-5449-4d8b-8eb4-e0a2d6ebf893/selected
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '15'
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":false}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/e2ac8d0d-5449-4d8b-8eb4-e0a2d6ebf893/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/e2ac8d0d-5449-4d8b-8eb4-e0a2d6ebf893/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '2'
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//input[./@type = ''submit'' or ./@type
        = ''reset'' or ./@type = ''image'' or ./@type = ''button''][((./@id = ''Sign
        Up'' or ./@value = ''Sign Up'') or ./@title = ''Sign Up'')] | .//input[./@type
        = ''image''][./@alt = ''Sign Up''] | .//button[((((./@id = ''Sign Up'' or
        ./@value = ''Sign Up'') or ./@title = ''Sign Up'') or normalize-space(string(.))
        = ''Sign Up'') or .//img[./@alt = ''Sign Up''])] | .//input[./@type = ''image''][./@alt
        = ''Sign Up'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '450'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:42 GMT
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"f5d9b27b-d181-4cfd-9c98-be38f2b95bb6"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:42 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f5d9b27b-d181-4cfd-9c98-be38f2b95bb6/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:43 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:43 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f5d9b27b-d181-4cfd-9c98-be38f2b95bb6/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:43 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:43 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f5d9b27b-d181-4cfd-9c98-be38f2b95bb6/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:43 GMT
      Connection:
      - close
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:43 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Email Address''
        or ./@name = ''Email Address'') or ./@placeholder = ''Email Address'') or
        ./@id = //label[normalize-space(string(.)) = ''Email Address'']/@for)] | .//label[normalize-space(string(.))
        = ''Email Address'']//.//*[self::input | self::textarea][not(./@type = ''submit''
        or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox'' or
        ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '587'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:45 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"d9e41ae2-d09d-49e0-87e1-757c97c1acb5"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:45 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/d9e41ae2-d09d-49e0-87e1-757c97c1acb5/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:45 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:45 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/d9e41ae2-d09d-49e0-87e1-757c97c1acb5/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:45 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:45 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/d9e41ae2-d09d-49e0-87e1-757c97c1acb5/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '17'
      Date:
      - Thu, 27 Oct 2016 00:16:45 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d9e41ae2-d09d-49e0-87e1-757c97c1acb5"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:45 GMT
      Connection:
      - close
      Content-Length:
      - '17'
    body:
      encoding: UTF-8
      string: '{"value":"email"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d9e41ae2-d09d-49e0-87e1-757c97c1acb5"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:45 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"d9e41ae2-d09d-49e0-87e1-757c97c1acb5"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:45 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/d9e41ae2-d09d-49e0-87e1-757c97c1acb5/value
    body:
      encoding: UTF-8
      string: '{"value":["J","o","h","n","@","d","o","e",".","c","o","m"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '59'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:45 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:45 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"f07532af-1e44-4698-aa5f-39c2d3c5de2e"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:45 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f07532af-1e44-4698-aa5f-39c2d3c5de2e/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:45 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:45 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f07532af-1e44-4698-aa5f-39c2d3c5de2e/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:45 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:45 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f07532af-1e44-4698-aa5f-39c2d3c5de2e/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:46 GMT
      Content-Length:
      - '17'
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f07532af-1e44-4698-aa5f-39c2d3c5de2e"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:46 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '20'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"password"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f07532af-1e44-4698-aa5f-39c2d3c5de2e"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:46 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"f07532af-1e44-4698-aa5f-39c2d3c5de2e"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:46 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/f07532af-1e44-4698-aa5f-39c2d3c5de2e/value
    body:
      encoding: UTF-8
      string: '{"value":["p","a","s","s","w","o","r","d"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '43'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '2'
      Date:
      - Thu, 27 Oct 2016 00:16:46 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//input[./@type = ''submit'' or ./@type
        = ''reset'' or ./@type = ''image'' or ./@type = ''button''][((./@id = ''Sign
        in'' or ./@value = ''Sign in'') or ./@title = ''Sign in'')] | .//input[./@type
        = ''image''][./@alt = ''Sign in''] | .//button[((((./@id = ''Sign in'' or
        ./@value = ''Sign in'') or ./@title = ''Sign in'') or normalize-space(string(.))
        = ''Sign in'') or .//img[./@alt = ''Sign in''])] | .//input[./@type = ''image''][./@alt
        = ''Sign in'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '450'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:46 GMT
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"4a082be5-f20a-4440-9961-a01fbe3ba2ea"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:46 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/4a082be5-f20a-4440-9961-a01fbe3ba2ea/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:46 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:46 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/4a082be5-f20a-4440-9961-a01fbe3ba2ea/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:46 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/4a082be5-f20a-4440-9961-a01fbe3ba2ea/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:46 GMT
      Connection:
      - close
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:48 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"1dd46d5b-60d7-4d14-bc66-dc2ff97aae20"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:48 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/1dd46d5b-60d7-4d14-bc66-dc2ff97aae20/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:48 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:48 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/1dd46d5b-60d7-4d14-bc66-dc2ff97aae20/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:48 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:48 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":"/html"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '33'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:48 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"4724aa4a-0151-485f-bd88-e9f712b9cb3e"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:48 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/4724aa4a-0151-485f-bd88-e9f712b9cb3e/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:49 GMT
      Connection:
      - close
      Content-Length:
      - '163'
    body:
      encoding: UTF-8
      string: '{"error":"stale element reference","message":"The element reference
        is stale. Either the element is no longer attached to the DOM or the page
        has been refreshed."}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:49 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":"/html"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '33'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:49 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"c4b48bc9-a4d3-4642-abe5-0624dada2b8f"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:49 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/c4b48bc9-a4d3-4642-abe5-0624dada2b8f/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:49 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:49 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/c4b48bc9-a4d3-4642-abe5-0624dada2b8f/text
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:50 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '171'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJ2YWx1ZSI6Ik15RkxpWFxuVklERU9TXG5NWSBRVUVVRVxuUEVPUExFXG5B
        RFZBTkNFRCBTRUFSQ0hcbldlbGNvbWUsIEpvaG4gRG9lXG5QZW9wbGUgSSBG
        b2xsb3dcblZpZGVvcyBpbiBRdWV1ZSBGb2xsb3dlcnMgVW5mb2xsb3dcbk1z
        LiBOYXRhc2hhIFdpemEgMCAxXG7CqSAyMDEzIE15RkxpWCJ9
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''Welcome'' or normalize-space(string(.))
        = ''Welcome'') or ./@title = ''Welcome'') or .//img[./@alt = ''Welcome''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '162'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 00:16:50 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''Welcome'' or contains(normalize-space(string(.)),
        ''Welcome'')) or contains(./@title, ''Welcome'')) or .//img[contains(./@alt,
        ''Welcome'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '189'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:50 GMT
      Connection:
      - close
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"e2b6cba7-5659-4d5c-aa3a-040983d1270e"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:50 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/e2b6cba7-5659-4d5c-aa3a-040983d1270e/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:50 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/e2b6cba7-5659-4d5c-aa3a-040983d1270e/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:50 GMT
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''Sign Out'' or
        normalize-space(string(.)) = ''Sign Out'') or ./@title = ''Sign Out'') or
        .//img[./@alt = ''Sign Out''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '166'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:50 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"4c7fe212-dc5d-4bd3-9f55-786b326400ad"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:50 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/4c7fe212-dc5d-4bd3-9f55-786b326400ad/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:50 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/4c7fe212-dc5d-4bd3-9f55-786b326400ad/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:50 GMT
      Connection:
      - close
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:50 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/url
    body:
      encoding: UTF-8
      string: '{"url":"http://127.0.0.1:52662/login"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '38'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '2'
      Date:
      - Thu, 27 Oct 2016 00:16:52 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:52 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Email Address''
        or ./@name = ''Email Address'') or ./@placeholder = ''Email Address'') or
        ./@id = //label[normalize-space(string(.)) = ''Email Address'']/@for)] | .//label[normalize-space(string(.))
        = ''Email Address'']//.//*[self::input | self::textarea][not(./@type = ''submit''
        or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox'' or
        ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '587'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:52 GMT
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"89269e29-ecce-459e-8285-dbdeb86a8947"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:52 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/89269e29-ecce-459e-8285-dbdeb86a8947/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:52 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:52 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/89269e29-ecce-459e-8285-dbdeb86a8947/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:52 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:52 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/89269e29-ecce-459e-8285-dbdeb86a8947/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:52 GMT
      Connection:
      - close
      Content-Length:
      - '17'
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:52 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"89269e29-ecce-459e-8285-dbdeb86a8947"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '17'
      Date:
      - Thu, 27 Oct 2016 00:16:52 GMT
    body:
      encoding: UTF-8
      string: '{"value":"email"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:52 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"89269e29-ecce-459e-8285-dbdeb86a8947"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:52 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:52 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"89269e29-ecce-459e-8285-dbdeb86a8947"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:52 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:52 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/89269e29-ecce-459e-8285-dbdeb86a8947/value
    body:
      encoding: UTF-8
      string: '{"value":["l","u","r","a","_","b","e","r","g","s","t","r","o","m","@","m","a","n","t","e","k","a","u","t","z","e","r",".","i","n","f","o"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '139'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Date:
      - Thu, 27 Oct 2016 00:16:52 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:52 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:53 GMT
      Connection:
      - close
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"948c6520-43d4-47cf-8ea2-08e4fdf2b1b7"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:53 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/948c6520-43d4-47cf-8ea2-08e4fdf2b1b7/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:53 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:53 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/948c6520-43d4-47cf-8ea2-08e4fdf2b1b7/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:53 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:53 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/948c6520-43d4-47cf-8ea2-08e4fdf2b1b7/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:53 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '17'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:53 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"948c6520-43d4-47cf-8ea2-08e4fdf2b1b7"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '20'
      Date:
      - Thu, 27 Oct 2016 00:16:53 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"password"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:53 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"948c6520-43d4-47cf-8ea2-08e4fdf2b1b7"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:53 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:53 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"948c6520-43d4-47cf-8ea2-08e4fdf2b1b7"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:53 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:53 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/948c6520-43d4-47cf-8ea2-08e4fdf2b1b7/value
    body:
      encoding: UTF-8
      string: '{"value":["p","a","s","s","w","o","r","d"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '43'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:53 GMT
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:53 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//input[./@type = ''submit'' or ./@type
        = ''reset'' or ./@type = ''image'' or ./@type = ''button''][((./@id = ''Sign
        in'' or ./@value = ''Sign in'') or ./@title = ''Sign in'')] | .//input[./@type
        = ''image''][./@alt = ''Sign in''] | .//button[((((./@id = ''Sign in'' or
        ./@value = ''Sign in'') or ./@title = ''Sign in'') or normalize-space(string(.))
        = ''Sign in'') or .//img[./@alt = ''Sign in''])] | .//input[./@type = ''image''][./@alt
        = ''Sign in'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '450'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:53 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"36b5b62c-4224-459f-af65-39b821c24ae3"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:53 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/36b5b62c-4224-459f-af65-39b821c24ae3/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 00:16:53 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:53 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/36b5b62c-4224-459f-af65-39b821c24ae3/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:53 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:53 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/36b5b62c-4224-459f-af65-39b821c24ae3/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '2'
      Date:
      - Thu, 27 Oct 2016 00:16:54 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:54 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:54 GMT
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:54 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:54 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:54 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 00:16:54 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:54 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or contains(normalize-space(string(.)),
        ''People'')) or contains(./@title, ''People'')) or .//img[contains(./@alt,
        ''People'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '185'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:54 GMT
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:54 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''People'' or normalize-space(string(.))
        = ''People'') or ./@title = ''People'') or .//img[./@alt = ''People''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '158'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:54 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"02aa009c-4d58-4207-adf1-31a3b07e0bd0"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:54 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/02aa009c-4d58-4207-adf1-31a3b07e0bd0/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:54 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:54 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/02aa009c-4d58-4207-adf1-31a3b07e0bd0/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:55 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:55 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":"/html"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '33'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 00:16:55 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"0b4a5634-3d7c-4fd3-bc87-6d705d86630d"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:55 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/0b4a5634-3d7c-4fd3-bc87-6d705d86630d/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:55 GMT
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:55 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/0b4a5634-3d7c-4fd3-bc87-6d705d86630d/text
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '163'
      Date:
      - Thu, 27 Oct 2016 00:16:55 GMT
    body:
      encoding: UTF-8
      string: '{"error":"stale element reference","message":"The element reference
        is stale. Either the element is no longer attached to the DOM or the page
        has been refreshed."}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:55 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":"/html"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '33'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 00:16:55 GMT
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"1f597624-edf9-4988-bcb6-56c40b1f0e42"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:55 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/1f597624-edf9-4988-bcb6-56c40b1f0e42/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 00:16:55 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:55 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/21dfc6c6-fe1b-4562-b714-008c4f81f021/element/1f597624-edf9-4988-bcb6-56c40b1f0e42/text
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '171'
      Date:
      - Thu, 27 Oct 2016 00:16:55 GMT
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJ2YWx1ZSI6Ik15RkxpWFxuVklERU9TXG5NWSBRVUVVRVxuUEVPUExFXG5B
        RFZBTkNFRCBTRUFSQ0hcbldlbGNvbWUsIE1zLiBOYXRhc2hhIFdpemFcblBl
        b3BsZSBJIEZvbGxvd1xuVmlkZW9zIGluIFF1ZXVlIEZvbGxvd2VycyBVbmZv
        bGxvd1xuSm9obiBEb2UgMCAxXG7CqSAyMDEzIE15RkxpWCJ9
    http_version: 
  recorded_at: Thu, 27 Oct 2016 00:16:55 GMT
- request:
    method: get
    uri: http://127.0.0.1:52662/__identify__
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: 'OK '
    headers:
      Server:
      - WEBrick/1.3.1 (Ruby/2.1.2/2014-05-08)
      Date:
      - Thu, 27 Oct 2016 15:31:45 GMT
      Content-Length:
      - '8'
      Connection:
      - Keep-Alive
    body:
      encoding: UTF-8
      string: '44919000'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:31:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/url
    body:
      encoding: UTF-8
      string: '{"url":"http://127.0.0.1:52662/login"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '38'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:35 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Email Address''
        or ./@name = ''Email Address'') or ./@placeholder = ''Email Address'') or
        ./@id = //label[normalize-space(string(.)) = ''Email Address'']/@for)] | .//label[normalize-space(string(.))
        = ''Email Address'']//.//*[self::input | self::textarea][not(./@type = ''submit''
        or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox'' or
        ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '587'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '90'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:35 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"d4e1940b-dad0-4db3-933f-5b10c9e6ffdf"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:35 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/d4e1940b-dad0-4db3-933f-5b10c9e6ffdf/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:35 GMT
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:35 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/d4e1940b-dad0-4db3-933f-5b10c9e6ffdf/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:35 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:35 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/d4e1940b-dad0-4db3-933f-5b10c9e6ffdf/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '17'
      Date:
      - Thu, 27 Oct 2016 15:33:35 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d4e1940b-dad0-4db3-933f-5b10c9e6ffdf"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:35 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '17'
    body:
      encoding: UTF-8
      string: '{"value":"email"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d4e1940b-dad0-4db3-933f-5b10c9e6ffdf"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:35 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"d4e1940b-dad0-4db3-933f-5b10c9e6ffdf"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:35 GMT
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/d4e1940b-dad0-4db3-933f-5b10c9e6ffdf/value
    body:
      encoding: UTF-8
      string: '{"value":["m","y","a","@","k","u","l","a","s",".","i","n","f","o"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '67'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:35 GMT
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:35 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '90'
      Date:
      - Thu, 27 Oct 2016 15:33:36 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"fed31659-053e-480e-a9ea-eaf94be3913b"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:36 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/fed31659-053e-480e-a9ea-eaf94be3913b/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:36 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:36 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/fed31659-053e-480e-a9ea-eaf94be3913b/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:36 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:36 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/fed31659-053e-480e-a9ea-eaf94be3913b/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:36 GMT
      Content-Length:
      - '17'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"fed31659-053e-480e-a9ea-eaf94be3913b"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:36 GMT
      Content-Length:
      - '20'
    body:
      encoding: UTF-8
      string: '{"value":"password"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"fed31659-053e-480e-a9ea-eaf94be3913b"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 15:33:36 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"fed31659-053e-480e-a9ea-eaf94be3913b"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:36 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/fed31659-053e-480e-a9ea-eaf94be3913b/value
    body:
      encoding: UTF-8
      string: '{"value":["p","a","s","s","w","o","r","d"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '43'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '2'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:36 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//input[./@type = ''submit'' or ./@type
        = ''reset'' or ./@type = ''image'' or ./@type = ''button''][((./@id = ''Sign
        in'' or ./@value = ''Sign in'') or ./@title = ''Sign in'')] | .//input[./@type
        = ''image''][./@alt = ''Sign in''] | .//button[((((./@id = ''Sign in'' or
        ./@value = ''Sign in'') or ./@title = ''Sign in'') or normalize-space(string(.))
        = ''Sign in'') or .//img[./@alt = ''Sign in''])] | .//input[./@type = ''image''][./@alt
        = ''Sign in'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '450'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:36 GMT
      Content-Length:
      - '90'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"8e331bf9-bf20-492f-9feb-02aef0258ad2"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:36 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/8e331bf9-bf20-492f-9feb-02aef0258ad2/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:36 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:36 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/8e331bf9-bf20-492f-9feb-02aef0258ad2/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 15:33:36 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/8e331bf9-bf20-492f-9feb-02aef0258ad2/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:36 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:36 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/url
    body:
      encoding: UTF-8
      string: '{"url":"http://127.0.0.1:52662/invitations/new"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '48'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '2'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = concat(''Friend'',\"''\",''s
        Name'') or ./@name = concat(''Friend'',\"''\",''s Name'')) or ./@placeholder
        = concat(''Friend'',\"''\",''s Name'')) or ./@id = //label[normalize-space(string(.))
        = concat(''Friend'',\"''\",''s Name'')]/@for)] | .//label[normalize-space(string(.))
        = concat(''Friend'',\"''\",''s Name'')]//.//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '667'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
      Content-Length:
      - '90'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"3caf0386-f676-4c72-a04f-dacac575a69b"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/3caf0386-f676-4c72-a04f-dacac575a69b/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/3caf0386-f676-4c72-a04f-dacac575a69b/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/3caf0386-f676-4c72-a04f-dacac575a69b/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '17'
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"3caf0386-f676-4c72-a04f-dacac575a69b"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '16'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
    body:
      encoding: UTF-8
      string: '{"value":"text"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"3caf0386-f676-4c72-a04f-dacac575a69b"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"3caf0386-f676-4c72-a04f-dacac575a69b"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/3caf0386-f676-4c72-a04f-dacac575a69b/value
    body:
      encoding: UTF-8
      string: '{"value":["J","o","h","n"," ","D","o","e"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '43'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = concat(''Friend'',\"''\",''s
        Email'') or ./@name = concat(''Friend'',\"''\",''s Email'')) or ./@placeholder
        = concat(''Friend'',\"''\",''s Email'')) or ./@id = //label[normalize-space(string(.))
        = concat(''Friend'',\"''\",''s Email'')]/@for)] | .//label[normalize-space(string(.))
        = concat(''Friend'',\"''\",''s Email'')]//.//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '672'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = concat(''Friend'',\"''\",''s
        Email'') or ./@name = concat(''Friend'',\"''\",''s Email'')) or ./@placeholder
        = concat(''Friend'',\"''\",''s Email'')) or ./@id = //label[contains(normalize-space(string(.)),
        concat(''Friend'',\"''\",''s Email''))]/@for)] | .//label[contains(normalize-space(string(.)),
        concat(''Friend'',\"''\",''s Email''))]//.//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '690'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '90'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"43f7cbe3-2317-49fc-a296-501e837fc70d"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/43f7cbe3-2317-49fc-a296-501e837fc70d/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/43f7cbe3-2317-49fc-a296-501e837fc70d/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/43f7cbe3-2317-49fc-a296-501e837fc70d/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '17'
      Date:
      - Thu, 27 Oct 2016 15:33:39 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"input"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:39 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"43f7cbe3-2317-49fc-a296-501e837fc70d"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '17'
    body:
      encoding: UTF-8
      string: '{"value":"email"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"43f7cbe3-2317-49fc-a296-501e837fc70d"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"43f7cbe3-2317-49fc-a296-501e837fc70d"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/43f7cbe3-2317-49fc-a296-501e837fc70d/value
    body:
      encoding: UTF-8
      string: '{"value":["J","o","h","n","@","d","o","e",".","c","o","m"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '59'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Message'' or
        ./@name = ''Message'') or ./@placeholder = ''Message'') or ./@id = //label[normalize-space(string(.))
        = ''Message'']/@for)] | .//label[normalize-space(string(.)) = ''Message'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '557'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Message'' or
        ./@name = ''Message'') or ./@placeholder = ''Message'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Message'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Message'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '575'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"2522e1e9-2973-4605-a123-529c6773b7c2"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/2522e1e9-2973-4605-a123-529c6773b7c2/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/2522e1e9-2973-4605-a123-529c6773b7c2/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/2522e1e9-2973-4605-a123-529c6773b7c2/name
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
      Content-Length:
      - '20'
    body:
      encoding: UTF-8
      string: '{"value":"textarea"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"2522e1e9-2973-4605-a123-529c6773b7c2"},"type"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8543'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '20'
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":"textarea"}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"return (function(){return function(){var aa=\"function\"==typeof
        Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw
        new TypeError(\"ES3 does not support getters and setters.\");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)},ba=\"undefined\"!=typeof
        window&&window===this?this:\"undefined\"!=typeof global?global:this;\nfunction
        e(a,c){if(c){for(var b=ba,d=a.split(\".\"),f=0;f<d.length-1;f++){var h=d[f];h
        in b||(b[h]={});b=b[h]}d=d[d.length-1];f=b[d];h=c(f);h!=f&&null!=h&&aa(b,d,{configurable:!0,writable:!0,value:h})}}\ne(\"String.prototype.repeat\",function(a){return
        a?a:function(a){var b;if(null==this)throw new TypeError(\"The ''this'' value
        for String.prototype.repeat must not be null or undefined\");b=this+\"\";if(0>a||1342177279<a)throw
        new RangeError(\"Invalid count value\");a|=0;for(var d=\"\";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return
        d}});e(\"Math.sign\",function(a){return a?a:function(a){a=Number(a);return!a||isNaN(a)?a:0<a?1:-1}});var
        g=this;function l(a){return\"string\"==typeof a};function m(a,c){this.a=n[a]||p;this.message=c||\"\";var
        b=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")}),d=b.length-5;if(0>d||b.indexOf(\"Error\",d)!=d)b+=\"Error\";this.name=b;b=Error(this.message);b.name=this.name;this.stack=b.stack||\"\"}\n(function(){var
        a=Error;function c(){}c.prototype=a.prototype;m.b=a.prototype;m.prototype=new
        c;m.prototype.constructor=m;m.a=function(b,c,f){for(var h=Array(arguments.length-2),k=2;k<arguments.length;k++)h[k-2]=arguments[k];return
        a.prototype[c].apply(b,h)}})();var p=\"unknown error\",n={15:\"element not
        selectable\",11:\"element not visible\"};n[31]=p;n[30]=p;n[24]=\"invalid cookie
        domain\";n[29]=\"invalid element coordinates\";n[12]=\"invalid element state\";n[32]=\"invalid
        selector\";n[51]=\"invalid selector\";\nn[52]=\"invalid selector\";n[17]=\"javascript
        error\";n[405]=\"unsupported operation\";n[34]=\"move target out of bounds\";n[27]=\"no
        such alert\";n[7]=\"no such element\";n[8]=\"no such frame\";n[23]=\"no such
        window\";n[28]=\"script timeout\";n[33]=\"session not created\";n[10]=\"stale
        element reference\";n[21]=\"timeout\";n[25]=\"unable to set cookie\";n[26]=\"unexpected
        alert open\";n[13]=p;n[9]=\"unknown command\";m.prototype.toString=function(){return
        this.name+\": \"+this.message};var q=String.prototype.trim?function(a){return
        a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};\nfunction
        r(a,c){for(var b=0,d=q(String(a)).split(\".\"),f=q(String(c)).split(\".\"),h=Math.max(d.length,f.length),k=0;!b&&k<h;k++){var
        S=d[k]||\"\",ja=f[k]||\"\",ka=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),la=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var
        t=ka.exec(S)||[\"\",\"\",\"\"],u=la.exec(ja)||[\"\",\"\",\"\"];if(0==t[0].length&&0==u[0].length)break;b=v(0==t[1].length?0:parseInt(t[1],10),0==u[1].length?0:parseInt(u[1],10))||v(0==t[2].length,0==u[2].length)||v(t[2],u[2])}while(!b)}return
        b}function v(a,c){return a<c?-1:a>c?1:0};var w;a:{var x=g.navigator;if(x){var
        y=x.userAgent;if(y){w=y;break a}}w=\"\"}function z(a){return-1!=w.indexOf(a)};function
        ca(a,c){for(var b=a.length,d=l(a)?a.split(\"\"):a,f=0;f<b;f++)f in d&&c.call(void
        0,d[f],f,a)};function A(){return z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")};function
        B(){return z(\"Opera\")||z(\"OPR\")}function C(){return(z(\"Chrome\")||z(\"CriOS\"))&&!B()&&!z(\"Edge\")};var
        D=B(),E=z(\"Trident\")||z(\"MSIE\"),F=z(\"Edge\"),G=z(\"Gecko\")&&!(-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),da=-1!=w.toLowerCase().indexOf(\"webkit\")&&!z(\"Edge\");function
        ea(){var a=w;if(G)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(F)return/Edge\\/([\\d\\.]+)/.exec(a);if(E)return/\\b(?:MSIE|rv)[:
        ]([^\\);]+)(\\)|;)/.exec(a);if(da)return/WebKit\\/(\\S+)/.exec(a)}function
        H(){var a=g.document;return a?a.documentMode:void 0}\nvar I=function(){if(D&&g.opera){var
        a;var c=g.opera.version;try{a=c()}catch(b){a=c}return a}a=\"\";(c=ea())&&(a=c?c[1]:\"\");return
        E&&(c=H(),null!=c&&c>parseFloat(a))?String(c):a}(),J={},K=g.document,L=K&&E?H()||(\"CSS1Compat\"==K.compatMode?parseInt(I,10):5):void
        0;!G&&!E||E&&9<=Number(L)||G&&(J[\"1.9.1\"]||(J[\"1.9.1\"]=0<=r(I,\"1.9.1\")));E&&(J[\"9\"]||(J[\"9\"]=0<=r(I,\"9\")));var
        fa=z(\"Firefox\"),ga=A()||z(\"iPod\"),ha=z(\"iPad\"),M=z(\"Android\")&&!(C()||z(\"Firefox\")||B()||z(\"Silk\")),ia=C(),N=z(\"Safari\")&&!(C()||z(\"Coast\")||B()||z(\"Edge\")||z(\"Silk\")||z(\"Android\"))&&!(A()||z(\"iPad\")||z(\"iPod\"));var
        ma={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},na={IMG:\" \",BR:\"\\n\"};function
        oa(a,c,b){if(!(a.nodeName in ma))if(3==a.nodeType)b?c.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):c.push(a.nodeValue);else
        if(a.nodeName in na)c.push(na[a.nodeName]);else for(a=a.firstChild;a;)oa(a,c,b),a=a.nextSibling};function
        O(a){return(a=a.exec(w))?a[1]:\"\"}var pa=function(){if(fa)return O(/Firefox\\/([0-9.]+)/);if(E||F||D)return
        I;if(ia)return O(/Chrome\\/([0-9.]+)/);if(N&&!(A()||z(\"iPad\")||z(\"iPod\")))return
        O(/Version\\/([0-9.]+)/);if(ga||ha){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(w);if(a)return
        a[1]+\".\"+a[2]}else if(M)return(a=O(/Android\\s+([0-9.]+)/))?a:O(/Version\\/([0-9.]+)/);return\"\"}();var
        qa;function P(a){ra?qa(a):M?r(sa,a):r(pa,a)}var ra=function(){if(!G)return!1;var
        a=g.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(f){return!1}var
        c=a.classes,a=a.interfaces,b=c[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),d=c[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;qa=function(a){b.compare(d,\"\"+a)};return!0}(),Q;if(M){var
        ta=/Android\\s+([0-9\\.]+)/.exec(w);Q=ta?ta[1]:\"0\"}else Q=\"0\";\nvar sa=Q,ua=E&&!(8<=Number(L)),va=E&&!(9<=Number(L));M&&P(2.3);M&&P(4);N&&P(6);function
        R(a,c){c=c.toLowerCase();if(\"style\"==c)return wa(a.style.cssText);if(ua&&\"value\"==c&&T(a,\"INPUT\"))return
        a.value;if(va&&!0===a[c])return String(a.getAttribute(c));var b=a.getAttributeNode(c);return
        b&&b.specified?b.value:null}var xa=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^'']*''){2})*[^'']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction
        wa(a){var c=[];ca(a.split(xa),function(a){var d=a.indexOf(\":\");0<d&&(a=[a.slice(0,d),a.slice(d+1)],2==a.length&&c.push(a[0].toLowerCase(),\":\",a[1],\";\"))});c=c.join(\"\");return
        c=\";\"==c.charAt(c.length-1)?c:c+\";\"}function U(a,c){var b;ua&&\"value\"==c&&T(a,\"OPTION\")&&null===R(a,\"value\")?(b=[],oa(a,b,!1),b=b.join(\"\")):b=a[c];return
        b}function T(a,c){return!!a&&1==a.nodeType&&(!c||a.tagName.toUpperCase()==c)}\nfunction
        ya(a){return T(a,\"OPTION\")?!0:T(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var
        za={\"class\":\"className\",readonly:\"readOnly\"},V=\"async autofocus autoplay
        checked compact complete controls declare defaultchecked defaultselected defer
        disabled draggable ended formnovalidate hidden indeterminate iscontenteditable
        ismap itemscope loop multiple muted nohref noresize noshade novalidate nowrap
        open paused pubdate readonly required reversed scoped seamless seeking selected
        spellcheck truespeed willvalidate\".split(\" \");function Aa(a,c){var b=null,d=c.toLowerCase();if(\"style\"==d)return(b=a.style)&&!l(b)&&(b=b.cssText),b;if((\"selected\"==d||\"checked\"==d)&&ya(a)){if(!ya(a))throw
        new m(15,\"Element is not selectable\");var b=\"selected\",f=a.type&&a.type.toLowerCase();if(\"checkbox\"==f||\"radio\"==f)b=\"checked\";return
        U(a,b)?\"true\":null}var h=T(a,\"A\");if(T(a,\"IMG\")&&\"src\"==d||h&&\"href\"==d)return(b=R(a,d))&&(b=U(a,d)),b;if(\"spellcheck\"==d){b=R(a,d);if(null!==b){if(\"false\"==b.toLowerCase())return\"false\";if(\"true\"==b.toLowerCase())return\"true\"}return
        U(a,\nd)+\"\"}h=za[c]||c;a:if(l(V))d=l(d)&&1==d.length?V.indexOf(d,0):-1;else{for(var
        k=0;k<V.length;k++)if(k in V&&V[k]===d){d=k;break a}d=-1}if(0<=d)return(b=null!==R(a,c)||U(a,h))?\"true\":null;try{f=U(a,h)}catch(S){}(d=null==f)||(d=typeof
        f,d=\"object\"==d&&null!=f||\"function\"==d);d?b=R(a,c):b=f;return null!=b?b.toString():null}var
        W=[\"_\"],X=g;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);for(var
        Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==Aa;Z?X[Y]=Aa:X[Y]?X=X[Y]:X=X[Y]={}};;
        return this._.apply(null,arguments);}.apply({navigator:typeof window!=''undefined''?window.navigator:null,document:typeof
        window!=''undefined''?window.document:null}, arguments);}\n).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"2522e1e9-2973-4605-a123-529c6773b7c2"},"readonly"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '8547'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"arguments[0].value = ''''","args":[{"element-6066-11e4-a52e-4f735466cecf":"2522e1e9-2973-4605-a123-529c6773b7c2"}]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '124'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '14'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/2522e1e9-2973-4605-a123-529c6773b7c2/value
    body:
      encoding: UTF-8
      string: '{"value":["h","e","l","l","o"," ","p","l","e","a","s","e"," ","j","o","i","n"]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '79'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
      Content-Length:
      - '2'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//input[./@type = ''submit'' or ./@type
        = ''reset'' or ./@type = ''image'' or ./@type = ''button''][((./@id = ''Send
        Invitation'' or ./@value = ''Send Invitation'') or ./@title = ''Send Invitation'')]
        | .//input[./@type = ''image''][./@alt = ''Send Invitation''] | .//button[((((./@id
        = ''Send Invitation'' or ./@value = ''Send Invitation'') or ./@title = ''Send
        Invitation'') or normalize-space(string(.)) = ''Send Invitation'') or .//img[./@alt
        = ''Send Invitation''])] | .//input[./@type = ''image''][./@alt = ''Send Invitation'']"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '530'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"a3f10391-e28b-49d1-b48e-2e343e5bfd97"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/a3f10391-e28b-49d1-b48e-2e343e5bfd97/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/a3f10391-e28b-49d1-b48e-2e343e5bfd97/enabled
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:40 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:40 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/a3f10391-e28b-49d1-b48e-2e343e5bfd97/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '2'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:41 GMT
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:41 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''Welcome'' or normalize-space(string(.))
        = ''Welcome'') or ./@title = ''Welcome'') or .//img[./@alt = ''Welcome''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '162'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:43 GMT
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:43 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''Welcome'' or contains(normalize-space(string(.)),
        ''Welcome'')) or contains(./@title, ''Welcome'')) or .//img[contains(./@alt,
        ''Welcome'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '189'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:43 GMT
      Content-Length:
      - '90'
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"723ed783-85ce-4586-a6b9-6fb7e79b5cd6"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:43 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/723ed783-85ce-4586-a6b9-6fb7e79b5cd6/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '14'
      Date:
      - Thu, 27 Oct 2016 15:33:43 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:43 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/723ed783-85ce-4586-a6b9-6fb7e79b5cd6/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:43 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:43 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][(((./@id = ''Sign Out'' or
        normalize-space(string(.)) = ''Sign Out'') or ./@title = ''Sign Out'') or
        .//img[./@alt = ''Sign Out''])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '166'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '90'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:43 GMT
    body:
      encoding: UTF-8
      string: '{"value":[{"element-6066-11e4-a52e-4f735466cecf":"f6d67db4-3cd4-4009-94f2-a2180298ffd2"}]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:43 GMT
- request:
    method: get
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/f6d67db4-3cd4-4009-94f2-a2180298ffd2/displayed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:43 GMT
      Content-Length:
      - '14'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":true}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:43 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/element/f6d67db4-3cd4-4009-94f2-a2180298ffd2/click
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Length:
      - '2'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:43 GMT
      Content-Length:
      - '2'
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:43 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/url
    body:
      encoding: UTF-8
      string: '{"url":"http://localhost:52662/register/gZd8LVylONWkyN2Z5jiDDQ"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '64'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '2'
      Date:
      - Thu, 27 Oct 2016 15:33:43 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: "{}"
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:43 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:44 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:44 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 15:33:45 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:45 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:46 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:46 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
      Content-Length:
      - '12'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '12'
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[normalize-space(string(.))
        = ''Password'']/@for)] | .//label[normalize-space(string(.)) = ''Password'']//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '562'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Oct 2016 15:33:47 GMT
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '12'
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:47 GMT
- request:
    method: post
    uri: http://127.0.0.1:4444/session/3f9da770-2a57-4b6d-b3de-b5c8afe33252/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//*[self::input | self::textarea][not(./@type
        = ''submit'' or ./@type = ''image'' or ./@type = ''radio'' or ./@type = ''checkbox''
        or ./@type = ''hidden'' or ./@type = ''file'')][(((./@id = ''Password'' or
        ./@name = ''Password'') or ./@placeholder = ''Password'') or ./@id = //label[contains(normalize-space(string(.)),
        ''Password'')]/@for)] | .//label[contains(normalize-space(string(.)), ''Password'')]//.//*[self::input
        | self::textarea][not(./@type = ''submit'' or ./@type = ''image'' or ./@type
        = ''radio'' or ./@type = ''checkbox'' or ./@type = ''hidden'' or ./@type =
        ''file'')]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '580'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Length:
      - '12'
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Oct 2016 15:33:48 GMT
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version: 
  recorded_at: Thu, 27 Oct 2016 15:33:48 GMT
recorded_with: VCR 2.9.3
